openapi: 3.0.3
info:
  title: ''
  description: |-
    API Details
    - Component: 
    - Reference: user-component
    - Enviroment: dev
    - Version: V2.0
    - Repository: [online](https://github.com/ConductionNL/user-component) / [zip](https://github.com/ConductionNL/user-component/archive/master.zip)
    - Docker Image: [online]() 
    - Datamodel: [postman](schema/user-component.postman_collection.json) / [oas](schema/openapi.yaml) / [pdf](schema/datamodel.pdf) / [modelio (zip)](schema/Datamodel_Modelio.zip) 

    Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.
  version: V2.0
servers:
  -
    url: /
    description: ''
paths:
  /alerts:
    get:
      operationId: getAlertCollection
      tags:
        - Alert
      responses:
        200:
          description: 'Alert collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Alert.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Alert.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert-read'
      summary: 'Retrieves the collection of Alert resources.'
      description: 'Retrieves the collection of Alert resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[icon]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[link]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateRead]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateRead[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateRead[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateRead[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateRead[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: icon
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'icon[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: link
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'link[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateRead
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateRead[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAlertCollection
      tags:
        - Alert
      responses:
        201:
          description: 'Alert resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alert-read'
          links:
            GetAlertItem:
              operationId: getAlertItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /alerts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Alert resource.'
      description: 'Creates a Alert resource.'
      parameters: []
      requestBody:
        description: 'The new Alert resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alert.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Alert.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alert-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alert-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alert-write'
        required: true
      deprecated: false
    parameters: []
  '/alerts/{id}':
    get:
      operationId: getAlertItem
      tags:
        - Alert
      responses:
        200:
          description: 'Alert resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alert-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Alert resource.'
      description: 'Retrieves a Alert resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAlertItem
      tags:
        - Alert
      responses:
        200:
          description: 'Alert resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alert-read'
          links:
            GetAlertItem:
              operationId: getAlertItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /alerts/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Alert resource.'
      description: 'Replaces the Alert resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Alert resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Alert.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Alert.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Alert-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Alert-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Alert-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Alert-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAlertItem
      tags:
        - Alert
      responses:
        204:
          description: 'Alert resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Alert resource.'
      description: 'Removes the Alert resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/alerts/{id}/audit_trail':
    get:
      operationId: get_audit_trailAlertItem
      tags:
        - Alert
      responses:
        200:
          description: 'Alert resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alert-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Alert resource.'
      description: 'Retrieves a Alert resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/alerts/{id}/change_log':
    get:
      operationId: get_change_logsAlertItem
      tags:
        - Alert
      responses:
        200:
          description: 'Alert resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Alert.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Alert-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Alert-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Alert resource.'
      description: 'Retrieves a Alert resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /applications:
    get:
      operationId: getApplicationCollection
      tags:
        - Application
      responses:
        200:
          description: 'Application collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      summary: 'Retrieves the collection of Application resources.'
      description: 'Retrieves the collection of Application resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postApplicationCollection
      tags:
        - Application
      responses:
        201:
          description: 'Application resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              operationId: getApplicationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Application resource.'
      description: 'Creates a Application resource.'
      parameters: []
      requestBody:
        description: 'The new Application resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        required: true
      deprecated: false
    parameters: []
  '/applications/{id}':
    get:
      operationId: getApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Application resource.'
      description: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              operationId: getApplicationItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Application resource.'
      description: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Application resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Application.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteApplicationItem
      tags:
        - Application
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Application resource.'
      description: 'Removes the Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/applications/{id}/audit_trail':
    get:
      operationId: get_audit_trailApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Application resource.'
      description: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/applications/{id}/change_log':
    get:
      operationId: get_change_logsApplicationItem
      tags:
        - Application
      responses:
        200:
          description: 'Application resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Application.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Application resource.'
      description: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /audit_trails:
    get:
      operationId: getAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/AuditTrail.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuditTrail-read'
      summary: 'Retrieves the collection of AuditTrail resources.'
      description: 'Retrieves the collection of AuditTrail resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[request]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[user]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[subject]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resource]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[resourceType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[endpoint]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[contentType]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[content]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[session]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: request
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'request[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: subject
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'subject[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resource
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'resource[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: resourceType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: endpoint
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'endpoint[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: contentType
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'contentType[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: content
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'content[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: session
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'session[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postAuditTrailCollection
      tags:
        - AuditTrail
      responses:
        201:
          description: 'AuditTrail resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a AuditTrail resource.'
      description: 'Creates a AuditTrail resource.'
      parameters: []
      requestBody:
        description: 'The new AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  '/audit_trails/{id}':
    get:
      operationId: getAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a AuditTrail resource.'
      description: 'Retrieves a AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the AuditTrail resource.'
      description: 'Replaces the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteAuditTrailItem
      tags:
        - AuditTrail
      responses:
        204:
          description: 'AuditTrail resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the AuditTrail resource.'
      description: 'Removes the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchAuditTrailItem
      tags:
        - AuditTrail
      responses:
        200:
          description: 'AuditTrail resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/AuditTrail.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
            text/html:
              schema:
                $ref: '#/components/schemas/AuditTrail-read'
          links:
            GetAuditTrailItem:
              operationId: getAuditTrailItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /audit_trails/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the AuditTrail resource.'
      description: 'Updates the AuditTrail resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated AuditTrail resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/AuditTrail.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
          text/html:
            schema:
              $ref: '#/components/schemas/AuditTrail-write'
        required: true
      deprecated: false
    parameters: []
  /change_logs:
    get:
      operationId: getChangeLogCollection
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ChangeLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChangeLog-read'
      summary: 'Retrieves the collection of ChangeLog resources.'
      description: 'Retrieves the collection of ChangeLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[action]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectId]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[objectClass]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[version]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: action
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'action[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectId
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectId[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: objectClass
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'objectClass[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: version
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
          style: form
          explode: false
          allowReserved: false
        -
          name: 'version[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: integer
          style: form
          explode: true
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postChangeLogCollection
      tags:
        - ChangeLog
      responses:
        201:
          description: 'ChangeLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a ChangeLog resource.'
      description: 'Creates a ChangeLog resource.'
      parameters: []
      requestBody:
        description: 'The new ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  '/change_logs/{id}':
    get:
      operationId: getChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a ChangeLog resource.'
      description: 'Retrieves a ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the ChangeLog resource.'
      description: 'Replaces the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteChangeLogItem
      tags:
        - ChangeLog
      responses:
        204:
          description: 'ChangeLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the ChangeLog resource.'
      description: 'Removes the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    patch:
      operationId: patchChangeLogItem
      tags:
        - ChangeLog
      responses:
        200:
          description: 'ChangeLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/ChangeLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/ChangeLog-read'
          links:
            GetChangeLogItem:
              operationId: getChangeLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /change_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Updates the ChangeLog resource.'
      description: 'Updates the ChangeLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated ChangeLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/ChangeLog.jsonld-write'
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/ChangeLog-write'
        required: true
      deprecated: false
    parameters: []
  /groups:
    get:
      operationId: getGroupCollection
      tags:
        - Group
      responses:
        200:
          description: 'Group collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      summary: 'Retrieves the collection of Group resources.'
      description: 'Retrieves the collection of Group resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: canBeRegisteredFor
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: boolean
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[title]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[code]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[canBeRegisteredFor]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'code[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postGroupCollection
      tags:
        - Group
      responses:
        201:
          description: 'Group resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Group resource.'
      description: 'Creates a Group resource.'
      parameters: []
      requestBody:
        description: 'The new Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    parameters: []
  '/groups/{id}':
    get:
      operationId: getGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              operationId: getGroupItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Group resource.'
      description: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Group resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Group.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteGroupItem
      tags:
        - Group
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Group resource.'
      description: 'Removes the Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/audit_trail':
    get:
      operationId: get_audit_trailGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/groups/{id}/change_log':
    get:
      operationId: get_change_logsGroupItem
      tags:
        - Group
      responses:
        200:
          description: 'Group resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Group.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Group resource.'
      description: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /login:
    post:
      operationId: loginUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /login_logs:
    get:
      operationId: getLoginLogCollection
      tags:
        - LoginLog
      responses:
        200:
          description: 'LoginLog collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LoginLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/LoginLog.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoginLog-read'
      summary: 'Retrieves the collection of LoginLog resources.'
      description: 'Retrieves the collection of LoginLog resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[address]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[method]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[status]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: address
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'address[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: method
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'method[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: status
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'status[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postLoginLogCollection
      tags:
        - LoginLog
      responses:
        201:
          description: 'LoginLog resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
          links:
            GetLoginLogItem:
              operationId: getLoginLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /login_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a LoginLog resource.'
      description: 'Creates a LoginLog resource.'
      parameters: []
      requestBody:
        description: 'The new LoginLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LoginLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LoginLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
        required: true
      deprecated: false
    parameters: []
  '/login_logs/{id}':
    get:
      operationId: getLoginLogItem
      tags:
        - LoginLog
      responses:
        200:
          description: 'LoginLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LoginLog resource.'
      description: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putLoginLogItem
      tags:
        - LoginLog
      responses:
        200:
          description: 'LoginLog resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
          links:
            GetLoginLogItem:
              operationId: getLoginLogItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /login_logs/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the LoginLog resource.'
      description: 'Replaces the LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated LoginLog resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/LoginLog.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/LoginLog.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
          text/html:
            schema:
              $ref: '#/components/schemas/LoginLog-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteLoginLogItem
      tags:
        - LoginLog
      responses:
        204:
          description: 'LoginLog resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the LoginLog resource.'
      description: 'Removes the LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/login_logs/{id}/audit_trail':
    get:
      operationId: get_audit_trailLoginLogItem
      tags:
        - LoginLog
      responses:
        200:
          description: 'LoginLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LoginLog resource.'
      description: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/login_logs/{id}/change_log':
    get:
      operationId: get_change_logsLoginLogItem
      tags:
        - LoginLog
      responses:
        200:
          description: 'LoginLog resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/LoginLog.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
            text/html:
              schema:
                $ref: '#/components/schemas/LoginLog-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a LoginLog resource.'
      description: 'Retrieves a LoginLog resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /logout:
    post:
      operationId: logoutUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /providers:
    get:
      operationId: getProviderCollection
      tags:
        - Provider
      responses:
        200:
          description: 'Provider collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
      summary: 'Retrieves the collection of Provider resources.'
      description: 'Retrieves the collection of Provider resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[type]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[application]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[configuration]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: application
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postProviderCollection
      tags:
        - Provider
      responses:
        201:
          description: 'Provider resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
          links:
            GetProviderItem:
              operationId: getProviderItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Provider resource.'
      description: 'Creates a Provider resource.'
      parameters: []
      requestBody:
        description: 'The new Provider resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider-write'
        required: true
      deprecated: false
    parameters: []
  '/providers/{id}':
    get:
      operationId: getProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Provider resource.'
      description: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
          links:
            GetProviderItem:
              operationId: getProviderItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Provider resource.'
      description: 'Replaces the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Provider resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Provider.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteProviderItem
      tags:
        - Provider
      responses:
        204:
          description: 'Provider resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Provider resource.'
      description: 'Removes the Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/providers/{id}/change_log':
    get:
      operationId: get_change_logsProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Provider resource.'
      description: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/providerss/{id}/audit_trail':
    get:
      operationId: get_audit_trailProviderItem
      tags:
        - Provider
      responses:
        200:
          description: 'Provider resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Provider.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Provider resource.'
      description: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /scopes:
    get:
      operationId: getScopeCollection
      tags:
        - Scope
      responses:
        200:
          description: 'Scope collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Scope.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Scope.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
      summary: 'Retrieves the collection of Scope resources.'
      description: 'Retrieves the collection of Scope resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[name]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[description]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[code]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: id
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'id[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: description
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'description[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: code
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'code[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'organization[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: dateCreated
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: dateModified
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postScopeCollection
      tags:
        - Scope
      responses:
        201:
          description: 'Scope resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
          links:
            GetScopeItem:
              operationId: getScopeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /scopes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Scope resource.'
      description: 'Creates a Scope resource.'
      parameters: []
      requestBody:
        description: 'The new Scope resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Scope.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Scope.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Scope-write'
        required: true
      deprecated: false
    parameters: []
  '/scopes/{id}':
    get:
      operationId: getScopeItem
      tags:
        - Scope
      responses:
        200:
          description: 'Scope resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Scope resource.'
      description: 'Retrieves a Scope resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putScopeItem
      tags:
        - Scope
      responses:
        200:
          description: 'Scope resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Scope.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
          links:
            GetScopeItem:
              operationId: getScopeItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /scopes/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Scope resource.'
      description: 'Replaces the Scope resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Scope resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Scope.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Scope.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Scope-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteScopeItem
      tags:
        - Scope
      responses:
        204:
          description: 'Scope resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Scope resource.'
      description: 'Removes the Scope resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/scopes/{id}/audit_trail':
    get:
      operationId: get_audit_trailSessionItem
      tags:
        - Session
      responses:
        200:
          description: 'Session resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Session-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Session resource.'
      description: 'Retrieves a Session resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/scopes/{id}/change_log':
    get:
      operationId: get_change_logsSessionItem
      tags:
        - Session
      responses:
        200:
          description: 'Session resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Session-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Session resource.'
      description: 'Retrieves a Session resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /sessions:
    get:
      operationId: getSessionCollection
      tags:
        - Session
      responses:
        200:
          description: 'Session collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Session.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Session.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session-read'
      summary: 'Retrieves the collection of Session resources.'
      description: 'Retrieves the collection of Session resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postSessionCollection
      tags:
        - Session
      responses:
        201:
          description: 'Session resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Session-read'
          links:
            GetSessionItem:
              operationId: getSessionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /sessions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Session resource.'
      description: 'Creates a Session resource.'
      parameters: []
      requestBody:
        description: 'The new Session resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Session.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Session.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Session-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Session-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Session-write'
        required: true
      deprecated: false
    parameters: []
  '/sessions/{id}':
    get:
      operationId: getSessionItem
      tags:
        - Session
      responses:
        200:
          description: 'Session resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Session-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Session resource.'
      description: 'Retrieves a Session resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putSessionItem
      tags:
        - Session
      responses:
        200:
          description: 'Session resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Session.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Session-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Session-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Session-read'
          links:
            GetSessionItem:
              operationId: getSessionItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /sessions/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Session resource.'
      description: 'Replaces the Session resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Session resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Session.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Session.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Session-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Session-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Session-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Session-write'
        required: true
      deprecated: false
    parameters: []
  /tokens:
    get:
      operationId: getTokenCollection
      tags:
        - Token
      responses:
        200:
          description: 'Token collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Token.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Token.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
      summary: 'Retrieves the collection of Token resources.'
      description: 'Retrieves the collection of Token resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[token]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[duration]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[validTill]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateAccepted]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validTill[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validTill[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validTill[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'validTill[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAccepted[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAccepted[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAccepted[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateAccepted[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: provider.name
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'provider.name[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: provider.type
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'provider.type[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: provider.application
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: token
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'token[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
        -
          name: user.username
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'user.username[]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
          allowReserved: false
      deprecated: false
    post:
      operationId: postTokenCollection
      tags:
        - Token
      responses:
        201:
          description: 'Token resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
          links:
            GetTokenItem:
              operationId: getTokenItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tokens/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a Token resource.'
      description: 'Creates a Token resource.'
      parameters: []
      requestBody:
        description: 'The new Token resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Token.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Token.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Token-write'
        required: true
      deprecated: false
    parameters: []
  '/tokens/{id}':
    get:
      operationId: getTokenItem
      tags:
        - Token
      responses:
        200:
          description: 'Token resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Token resource.'
      description: 'Retrieves a Token resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putTokenItem
      tags:
        - Token
      responses:
        200:
          description: 'Token resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
          links:
            GetTokenItem:
              operationId: getTokenItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tokens/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the Token resource.'
      description: 'Replaces the Token resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated Token resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Token.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/Token.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Token-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteTokenItem
      tags:
        - Token
      responses:
        204:
          description: 'Token resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the Token resource.'
      description: 'Removes the Token resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/tokens/{id}/audit_trail':
    get:
      operationId: get_audit_trailTokenItem
      tags:
        - Token
      responses:
        200:
          description: 'Token resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Token resource.'
      description: 'Retrieves a Token resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/tokens/{id}/change_log':
    get:
      operationId: get_change_logsTokenItem
      tags:
        - Token
      responses:
        200:
          description: 'Token resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/Token.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a Token resource.'
      description: 'Retrieves a Token resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  /users:
    get:
      operationId: getUserCollection
      tags:
        - User
      responses:
        200:
          description: 'User collection'
          content:
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User.jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:previous': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string, nullable: true }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      summary: 'Retrieves the collection of User resources.'
      description: 'Retrieves the collection of User resources.'
      parameters:
        -
          name: page
          in: query
          description: 'The collection page number'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 1
          style: form
          explode: false
          allowReserved: false
        -
          name: limit
          in: query
          description: 'The number of items per page'
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: integer
            default: 30
            minimum: 0
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[id]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[organization]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[username]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[locale]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[person]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[password]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateCreated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[dateModified]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'order[emailValidated]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateCreated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'dateModified[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'emailValidated[before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'emailValidated[strictly_before]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'emailValidated[after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: 'emailValidated[strictly_after]'
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: username
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: organization
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
        -
          name: person
          in: query
          description: ''
          required: false
          deprecated: false
          allowEmptyValue: true
          schema:
            type: string
          style: form
          explode: false
          allowReserved: false
      deprecated: false
    post:
      operationId: postUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  /users/token:
    post:
      operationId: use_tokenUserCollection
      tags:
        - User
      responses:
        201:
          description: 'User resource created'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
      summary: 'Creates a User resource.'
      description: 'Creates a User resource.'
      parameters: []
      requestBody:
        description: 'The new User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    parameters: []
  '/users/{id}':
    get:
      operationId: getUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    put:
      operationId: putUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource updated'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              operationId: getUserItem
              parameters:
                id: '$response.body#/id'
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        422:
          description: 'Unprocessable entity'
        404:
          description: 'Resource not found'
      summary: 'Replaces the User resource.'
      description: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      requestBody:
        description: 'The updated User resource'
        content:
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/json+ld:
            schema:
              $ref: '#/components/schemas/User.jsonld-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+hal:
            schema:
              $ref: '#/components/schemas/User-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+vnd.api:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/health+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        required: true
      deprecated: false
    delete:
      operationId: deleteUserItem
      tags:
        - User
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      summary: 'Removes the User resource.'
      description: 'Removes the User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/audit_trail':
    get:
      operationId: get_audit_trailUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/change_log':
    get:
      operationId: get_change_logsUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/scopes':
    get:
      operationId: get_scopesUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
  '/users/{id}/token':
    get:
      operationId: get_tokenUserItem
      tags:
        - User
      responses:
        200:
          description: 'User resource'
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/json+ld:
              schema:
                $ref: '#/components/schemas/User.jsonld-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+hal:
              schema:
                $ref: '#/components/schemas/User-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+vnd.api:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/health+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      summary: 'Retrieves a User resource.'
      description: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          description: 'Resource identifier'
          required: true
          deprecated: false
          allowEmptyValue: false
          schema:
            type: string
          style: simple
          explode: false
          allowReserved: false
      deprecated: false
    parameters: []
components:
  schemas:
    Alert-read:
      type: object
      description: 'All properties that the entity Alert holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this Alert'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this Alert.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        type:
          maxLength: 255
          description: 'The type of this Alert.'
          type: string
          nullable: true
        icon:
          maxLength: 255
          description: 'The flaticon of this Alert, in the form of Font Awesome. https://fontawesome.com/'
          type: string
          nullable: true
        link:
          maxLength: 255
          description: 'An URL/link pointing to configuration which this alert relates to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateRead:
          description: 'The moment this Alert has been read'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Alert-write:
      type: object
      description: 'All properties that the entity Alert holds.'
      required:
        - name
      properties:
        name:
          maxLength: 255
          description: 'The name of this Alert'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this Alert.'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'The type of this Alert.'
          type: string
          nullable: true
        icon:
          maxLength: 255
          description: 'The flaticon of this Alert, in the form of Font Awesome. https://fontawesome.com/'
          type: string
          nullable: true
        link:
          maxLength: 255
          description: 'An URL/link pointing to configuration which this alert relates to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateRead:
          description: 'The moment this Alert has been read'
          type: string
          format: date-time
          nullable: true
    Alert.jsonld-read:
      type: object
      description: 'All properties that the entity Alert holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this Alert'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this Alert.'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        type:
          maxLength: 255
          description: 'The type of this Alert.'
          type: string
          nullable: true
        icon:
          maxLength: 255
          description: 'The flaticon of this Alert, in the form of Font Awesome. https://fontawesome.com/'
          type: string
          nullable: true
        link:
          maxLength: 255
          description: 'An URL/link pointing to configuration which this alert relates to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateRead:
          description: 'The moment this Alert has been read'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Alert.jsonld-write:
      type: object
      description: 'All properties that the entity Alert holds.'
      required:
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          maxLength: 255
          description: 'The name of this Alert'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this Alert.'
          type: string
          nullable: true
        type:
          maxLength: 255
          description: 'The type of this Alert.'
          type: string
          nullable: true
        icon:
          maxLength: 255
          description: 'The flaticon of this Alert, in the form of Font Awesome. https://fontawesome.com/'
          type: string
          nullable: true
        link:
          maxLength: 255
          description: 'An URL/link pointing to configuration which this alert relates to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        dateRead:
          description: 'The moment this Alert has been read'
          type: string
          format: date-time
          nullable: true
    Application-read:
      type: object
      description: 'All properties that the entity Application holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this application'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          minLength: 8
          maxLength: 11
          description: 'The RSIN of the organization that owns this application'
          type: string
        name:
          maxLength: 255
          description: 'The name of this application'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this application.'
          type: string
          nullable: true
        scopes:
          description: 'A list of scopes that are posible on this application.'
          type: array
          items:
            $ref: '#/components/schemas/Scope-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
    Application-write:
      type: object
      description: 'All properties that the entity Application holds.'
      required:
        - organization
        - name
      properties:
        organization:
          minLength: 8
          maxLength: 11
          description: 'The RSIN of the organization that owns this application'
          type: string
        name:
          maxLength: 255
          description: 'The name of this application'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this application.'
          type: string
          nullable: true
        scopes:
          description: 'A list of scopes that are posible on this application.'
          type: array
          items:
            $ref: '#/components/schemas/Scope-write'
    Application.jsonld-read:
      type: object
      description: 'All properties that the entity Application holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this application'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          minLength: 8
          maxLength: 11
          description: 'The RSIN of the organization that owns this application'
          type: string
        name:
          maxLength: 255
          description: 'The name of this application'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this application.'
          type: string
          nullable: true
        scopes:
          description: 'A list of scopes that are posible on this application.'
          type: array
          items:
            $ref: '#/components/schemas/Scope.jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
    Application.jsonld-write:
      type: object
      description: 'All properties that the entity Application holds.'
      required:
        - organization
        - name
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          minLength: 8
          maxLength: 11
          description: 'The RSIN of the organization that owns this application'
          type: string
        name:
          maxLength: 255
          description: 'The name of this application'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this application.'
          type: string
          nullable: true
        scopes:
          description: 'A list of scopes that are posible on this application.'
          type: array
          items:
            $ref: '#/components/schemas/Scope.jsonld-write'
    AuditTrail-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail-write:
      type: object
      description: 'An resource representing a log line.'
    AuditTrail.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        application:
          maxLength: 255
          writeOnly: true
          description: 'The application that made the request'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        request:
          maxLength: 255
          description: 'The id of the request within that application'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        user:
          maxLength: 255
          description: 'The user on behalf of wich the request was made'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        subject:
          maxLength: 255
          description: '???'
          type: string
          nullable: true
        process:
          maxLength: 255
          description: 'The procces on behalf of wich the request was made'
          type: string
          nullable: true
        dataElements:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        dataSubjects:
          description: 'The moment this request was created'
          type: array
          items:
            type: string
          nullable: true
        resource:
          maxLength: 255
          description: 'The resource that was requested'
          type: string
          nullable: true
        resourceType:
          maxLength: 255
          description: 'The type of the resource that was requested'
          type: string
          nullable: true
        route:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        endpoint:
          maxLength: 255
          description: 'The endpoint that the request was made to'
          type: string
          nullable: true
        method:
          maxLength: 255
          description: 'The method that was used'
          type: string
          nullable: true
        accept:
          maxLength: 255
          description: 'The contentType that was reqousted'
          type: string
          nullable: true
        contentType:
          maxLength: 255
          description: 'The contentType that was suplieds'
          type: string
          nullable: true
        content:
          maxLength: 2555
          description: 'The moment this request was created'
          type: string
          nullable: true
        ip:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
        headers:
          description: 'The headers supplied by client'
          type: array
          items:
            type: string
        statusCode:
          description: 'The status code returned to client'
          type: integer
          nullable: true
        notFound:
          description: 'Whether or not the reqousted endpoint was found'
          type: boolean
          nullable: true
        forbidden:
          description: 'Whether or not the client was allowed to the reqousted endpoint'
          type: boolean
          nullable: true
        ok:
          description: 'Whether or not there where any problems'
          default: true
          example: true
          type: boolean
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    AuditTrail.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    ChangeLog-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog-write:
      type: object
      description: 'An resource representing a log line.'
    ChangeLog.jsonld-read:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        action:
          type: string
        objectId:
          type: string
          nullable: true
        objectClass:
          type: string
        version:
          type: integer
        data:
          type: array
          items:
            type: string
          nullable: true
        username:
          type: string
          nullable: true
        session:
          maxLength: 255
          description: 'The moment this request was created'
          type: string
          nullable: true
        dateCreated:
          description: 'The moment this request was created'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          externalDocs:
            url: 'http://schema.org/DateTime'
          type: string
          format: date-time
          nullable: true
    ChangeLog.jsonld-write:
      type: object
      description: 'An resource representing a log line.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
    Group-read:
      type: object
      description: 'A user Group.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this group'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this group.'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this group'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
        canBeRegisteredFor:
          description: 'Whether or not new users can be registered for this group'
          type: boolean
          nullable: true
        children:
          description: 'Groups that are a part of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        scopes:
          description: 'The scopes that members of this group have'
          type: array
          items:
            $ref: '#/components/schemas/Scope-read'
        users:
          description: 'The users that belong to this group'
          type: array
          items:
            $ref: '#/components/schemas/User-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Group-write:
      type: object
      description: 'A user Group.'
      properties:
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this group'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this group.'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this group'
          type: string
          nullable: true
        canBeRegisteredFor:
          description: 'Whether or not new users can be registered for this group'
          type: boolean
          nullable: true
        parent:
          description: 'The group that this group is part of'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group-write'
        scopes:
          description: 'The scopes that members of this group have'
          type: array
          items:
            $ref: '#/components/schemas/Scope-write'
        users:
          description: 'The users that belong to this group'
          type: array
          items:
            $ref: '#/components/schemas/User-write'
      required:
        - name
    Group.jsonld-read:
      type: object
      description: 'A user Group.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this group'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this group.'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this group'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
        canBeRegisteredFor:
          description: 'Whether or not new users can be registered for this group'
          type: boolean
          nullable: true
        children:
          description: 'Groups that are a part of this group'
          type: array
          items:
            $ref: '#/components/schemas/Group.jsonld-read'
        scopes:
          description: 'The scopes that members of this group have'
          type: array
          items:
            $ref: '#/components/schemas/Scope.jsonld-read'
        users:
          description: 'The users that belong to this group'
          type: array
          items:
            $ref: '#/components/schemas/User.jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Group.jsonld-write:
      type: object
      description: 'A user Group.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this group'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this group.'
          type: string
          nullable: true
        title:
          maxLength: 255
          description: 'The title of this group'
          type: string
          nullable: true
        canBeRegisteredFor:
          description: 'Whether or not new users can be registered for this group'
          type: boolean
          nullable: true
        parent:
          description: 'The group that this group is part of'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Group.jsonld-write'
        scopes:
          description: 'The scopes that members of this group have'
          type: array
          items:
            $ref: '#/components/schemas/Scope.jsonld-write'
        users:
          description: 'The users that belong to this group'
          type: array
          items:
            $ref: '#/components/schemas/User.jsonld-write'
      required:
        - name
    LoginLog-read:
      type: object
      description: 'An entity representing an login log.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        address:
          maxLength: 50
          description: 'The ip address of the login'
          type: string
        method:
          maxLength: 255
          description: 'The method of the login'
          type: string
        application:
          maxLength: 255
          description: 'The application uri used for this login'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          maxLength: 3
          description: 'the status code of the login'
          type: string
        dateCreated:
          writeOnly: true
          description: 'The moment this login was made'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this login was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - address
        - method
        - application
        - status
    LoginLog-write:
      type: object
      description: 'An entity representing an login log.'
      required:
        - address
        - method
        - application
        - status
      properties:
        address:
          maxLength: 50
          description: 'The ip address of the login'
          type: string
        method:
          maxLength: 255
          description: 'The method of the login'
          type: string
        application:
          maxLength: 255
          description: 'The application uri used for this login'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          maxLength: 3
          description: 'the status code of the login'
          type: string
    LoginLog.jsonld-read:
      type: object
      description: 'An entity representing an login log.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        address:
          maxLength: 50
          description: 'The ip address of the login'
          type: string
        method:
          maxLength: 255
          description: 'The method of the login'
          type: string
        application:
          maxLength: 255
          description: 'The application uri used for this login'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          maxLength: 3
          description: 'the status code of the login'
          type: string
        dateCreated:
          writeOnly: true
          description: 'The moment this login was made'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this login was updated'
          type: string
          format: date-time
          nullable: true
      required:
        - address
        - method
        - application
        - status
    LoginLog.jsonld-write:
      type: object
      description: 'An entity representing an login log.'
      required:
        - address
        - method
        - application
        - status
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        address:
          maxLength: 50
          description: 'The ip address of the login'
          type: string
        method:
          maxLength: 255
          description: 'The method of the login'
          type: string
        application:
          maxLength: 255
          description: 'The application uri used for this login'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        status:
          maxLength: 3
          description: 'the status code of the login'
          type: string
    Provider-read:
      type: object
      description: 'An external identity provider (like facebook).'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this profider'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this Provider'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this provider.'
          type: string
        type:
          maxLength: 255
          description: 'The type of this Provider'
          type: string
        application:
          maxLength: 255
          description: 'The Uri of the application this provider supports'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        configuration:
          description: 'A list of configurations that apply to this provider'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
        - type
        - application
    Provider-write:
      type: object
      description: 'An external identity provider (like facebook).'
      required:
        - organization
        - name
        - type
        - application
      properties:
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this Provider'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this provider.'
          type: string
        type:
          maxLength: 255
          description: 'The type of this Provider'
          type: string
        application:
          maxLength: 255
          description: 'The Uri of the application this provider supports'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        configuration:
          description: 'A list of configurations that apply to this provider'
          type: array
          items:
            type: string
    Provider.jsonld-read:
      type: object
      description: 'An external identity provider (like facebook).'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this profider'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this Provider'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this provider.'
          type: string
        type:
          maxLength: 255
          description: 'The type of this Provider'
          type: string
        application:
          maxLength: 255
          description: 'The Uri of the application this provider supports'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        configuration:
          description: 'A list of configurations that apply to this provider'
          type: array
          items:
            type: string
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - organization
        - name
        - type
        - application
    Provider.jsonld-write:
      type: object
      description: 'An external identity provider (like facebook).'
      required:
        - organization
        - name
        - type
        - application
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        name:
          maxLength: 255
          description: 'The name of this Provider'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this provider.'
          type: string
        type:
          maxLength: 255
          description: 'The type of this Provider'
          type: string
        application:
          maxLength: 255
          description: 'The Uri of the application this provider supports'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        configuration:
          description: 'A list of configurations that apply to this provider'
          type: array
          items:
            type: string
    Scope-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this scope'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this scope'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this scope.'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
          nullable: true
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        application:
          description: 'application this scope belongs to.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Scope-write:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this scope'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this scope'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this scope.'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
          nullable: true
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        application:
          description: 'application this scope belongs to.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application-write'
        userGroups:
          description: 'User groups that give this scope.'
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
      required:
        - name
    Scope.jsonld-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this scope'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this scope'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this scope.'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
          nullable: true
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        application:
          description: 'application this scope belongs to.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application.jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
      required:
        - name
    Scope.jsonld-write:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this scope'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          maxLength: 255
          description: 'The name of this scope'
          type: string
        description:
          maxLength: 2550
          description: 'The description of this scope.'
          type: string
          nullable: true
        code:
          description: 'The code of this scope'
          type: string
          nullable: true
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        application:
          description: 'application this scope belongs to.'
          nullable: true
          anyOf:
            -
              $ref: '#/components/schemas/Application.jsonld-write'
        userGroups:
          description: 'User groups that give this scope.'
          type: array
          items:
            $ref: '#/components/schemas/Group.jsonld-write'
      required:
        - name
    Session-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        user:
          description: 'The identifier of the user in this session'
          type: string
        expiry:
          description: 'The expiration moment for the session'
          type: string
          format: date-time
        valid:
          description: 'whether or not the session is valid'
          type: boolean
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
    Session-write:
      type: object
      description: ''
      properties:
        expiry:
          description: 'The expiration moment for the session'
          type: string
          format: date-time
        valid:
          description: 'whether or not the session is valid'
          type: boolean
    Session.jsonld-read:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this resource'
          type: string
          format: uuid
        user:
          description: 'The identifier of the user in this session'
          type: string
        expiry:
          description: 'The expiration moment for the session'
          type: string
          format: date-time
        valid:
          description: 'whether or not the session is valid'
          type: boolean
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
    Session.jsonld-write:
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        expiry:
          description: 'The expiration moment for the session'
          type: string
          format: date-time
        valid:
          description: 'whether or not the session is valid'
          type: boolean
    Token-read:
      type: object
      description: 'A token from an external identity profider (like facebook).'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this token'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        user:
          description: 'The user that this token belongs to.'
          $ref: '#/components/schemas/User-read'
        provider:
          description: 'The provider that this scope belongs to.'
          $ref: '#/components/schemas/Provider-read'
        token:
          description: 'The actual token.'
          type: string
        duration:
          description: 'Duration the token is active for in minutes'
          default: 600
          example: 600
          type: string
        validTill:
          description: 'The moment this token expires'
          type: string
          format: date-time
          nullable: true
        dateAccepted:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - user
        - provider
        - token
    Token-write:
      type: object
      description: 'A token from an external identity profider (like facebook).'
      required:
        - user
        - provider
        - token
      properties:
        user:
          description: 'The user that this token belongs to.'
          $ref: '#/components/schemas/User-write'
        provider:
          description: 'The provider that this scope belongs to.'
          $ref: '#/components/schemas/Provider-write'
        token:
          description: 'The actual token.'
          type: string
        duration:
          description: 'Duration the token is active for in minutes'
          default: 600
          example: 600
          type: string
        dateAccepted:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
    Token.jsonld-read:
      type: object
      description: 'A token from an external identity profider (like facebook).'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this token'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        user:
          description: 'The user that this token belongs to.'
          $ref: '#/components/schemas/User.jsonld-read'
        provider:
          description: 'The provider that this scope belongs to.'
          $ref: '#/components/schemas/Provider.jsonld-read'
        token:
          description: 'The actual token.'
          type: string
        duration:
          description: 'Duration the token is active for in minutes'
          default: 600
          example: 600
          type: string
        validTill:
          description: 'The moment this token expires'
          type: string
          format: date-time
          nullable: true
        dateAccepted:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
        dateCreated:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
          nullable: true
      required:
        - user
        - provider
        - token
    Token.jsonld-write:
      type: object
      description: 'A token from an external identity profider (like facebook).'
      required:
        - user
        - provider
        - token
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        user:
          description: 'The user that this token belongs to.'
          $ref: '#/components/schemas/User.jsonld-write'
        provider:
          description: 'The provider that this scope belongs to.'
          $ref: '#/components/schemas/Provider.jsonld-write'
        token:
          description: 'The actual token.'
          type: string
        duration:
          description: 'Duration the token is active for in minutes'
          default: 600
          example: 600
          type: string
        dateAccepted:
          description: 'The moment the invite was accepted by the user'
          type: string
          format: date-time
          nullable: true
    User-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        username:
          minLength: 8
          maxLength: 255
          description: 'A unique visual identifier that represents this user.'
          type: string
        locale:
          maxLength: 7
          description: 'A iso code reprecenting theusers language'
          default: en
          example: en
          type: string
        person:
          maxLength: 255
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        roles:
          readOnly: true
          type: array
          items:
            type: string
        userGroups:
          description: 'A list of groups to wichs this user belongs'
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        emailValidated:
          description: 'The moment this user validated their email'
          type: string
          format: date-time
          nullable: true
      required:
        - username
        - locale
    User-write:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        username:
          minLength: 8
          maxLength: 255
          description: 'A unique visual identifier that represents this user.'
          type: string
        locale:
          maxLength: 7
          description: 'A iso code reprecenting theusers language'
          default: en
          example: en
          type: string
        person:
          maxLength: 255
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        password:
          description: 'The hashed password'
          type: string
        userGroups:
          description: 'A list of groups to wichs this user belongs'
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
        currentPassword:
          description: 'The current password of the user. Used when PUT variable contains a new password to validate the user'
          type: string
          nullable: true
      required:
        - username
        - locale
    User.jsonld-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          format: uuid
          readOnly: true
          description: 'The (uu)id of this group'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        username:
          minLength: 8
          maxLength: 255
          description: 'A unique visual identifier that represents this user.'
          type: string
        locale:
          maxLength: 7
          description: 'A iso code reprecenting theusers language'
          default: en
          example: en
          type: string
        person:
          maxLength: 255
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        roles:
          readOnly: true
          type: array
          items:
            type: string
        userGroups:
          description: 'A list of groups to wichs this user belongs'
          type: array
          items:
            $ref: '#/components/schemas/Group.jsonld-read'
        dateCreated:
          description: 'The moment this request was created'
          type: string
          format: date-time
          nullable: true
        dateModified:
          description: 'The moment this request last Modified'
          type: string
          format: date-time
          nullable: true
        emailValidated:
          description: 'The moment this user validated their email'
          type: string
          format: date-time
          nullable: true
      required:
        - username
        - locale
    User.jsonld-write:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          oneOf:
            -
              type: string
            -
              type: object
              properties:
                '@vocab':
                  type: string
                hydra:
                  type: string
                  enum: ['http://www.w3.org/ns/hydra/core#']
              required:
                - '@vocab'
                - hydra
              additionalProperties: true
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          maxLength: 255
          description: 'A specific commonground organization'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        username:
          minLength: 8
          maxLength: 255
          description: 'A unique visual identifier that represents this user.'
          type: string
        locale:
          maxLength: 7
          description: 'A iso code reprecenting theusers language'
          default: en
          example: en
          type: string
        person:
          maxLength: 255
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
          nullable: true
        password:
          description: 'The hashed password'
          type: string
        userGroups:
          description: 'A list of groups to wichs this user belongs'
          type: array
          items:
            $ref: '#/components/schemas/Group.jsonld-write'
        currentPassword:
          description: 'The current password of the user. Used when PUT variable contains a new password to validate the user'
          type: string
          nullable: true
      required:
        - username
        - locale
  responses: {  }
  parameters: {  }
  examples: {  }
  requestBodies: {  }
  headers: {  }
  securitySchemes: {  }
security: []
tags: []
