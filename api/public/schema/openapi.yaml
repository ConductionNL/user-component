openapi: 3.0.2
info:
  title: 'User Component'
  version: V.0.1
  description: |
    API Details
    - Component: User Component
    - Reference: uc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/user-component-commonground) / [zip](https://github.com/ConductionNL/user-component-commonground/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pc-php) 
    - Datamodel: [postman](/schema/uc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /applications:
    get:
      tags:
        - Application
      operationId: getApplicationCollection
      summary: 'Retrieves the collection of Application resources.'
      responses:
        200:
          description: 'Application collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Application:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Application
      operationId: postApplicationCollection
      summary: 'Creates a Application resource.'
      responses:
        201:
          description: 'Application resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
          links:
            GetApplicationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getApplicationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /applications/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The new Application resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/applications/{id}':
    get:
      tags:
        - Application
      operationId: getApplicationItem
      summary: 'Retrieves a Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Application resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Application
      operationId: deleteApplicationItem
      summary: 'Removes the Application resource.'
      responses:
        204:
          description: 'Application resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Application
      operationId: putApplicationItem
      summary: 'Replaces the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Application:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Application-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Application-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
    patch:
      tags:
        - Application
      operationId: patchApplicationItem
      summary: 'Updates the Application resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Application resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Application:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Application-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Application-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Application-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Application-write'
        description: 'The updated Application resource'
  /groups:
    get:
      tags:
        - Group
      operationId: getGroupCollection
      summary: 'Retrieves the collection of Group resources.'
      responses:
        200:
          description: 'Group collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Group:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Group
      operationId: postGroupCollection
      summary: 'Creates a Group resource.'
      responses:
        201:
          description: 'Group resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
          links:
            GetGroupItem:
              parameters:
                id: '$response.body#/id'
              operationId: getGroupItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The new Group resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/groups/{id}':
    get:
      tags:
        - Group
      operationId: getGroupItem
      summary: 'Retrieves a Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Group resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Group
      operationId: deleteGroupItem
      summary: 'Removes the Group resource.'
      responses:
        204:
          description: 'Group resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Group
      operationId: putGroupItem
      summary: 'Replaces the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Group:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Group-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Group-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
    patch:
      tags:
        - Group
      operationId: patchGroupItem
      summary: 'Updates the Group resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Group resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Group:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Group-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Group-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Group-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Group-write'
        description: 'The updated Group resource'
  /providers:
    get:
      tags:
        - Provider
      operationId: getProviderCollection
      summary: 'Retrieves the collection of Provider resources.'
      responses:
        200:
          description: 'Provider collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Provider:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Provider
      operationId: postProviderCollection
      summary: 'Creates a Provider resource.'
      responses:
        201:
          description: 'Provider resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
          links:
            GetProviderItem:
              parameters:
                id: '$response.body#/id'
              operationId: getProviderItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /providers/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider-write'
        description: 'The new Provider resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/providers/{id}':
    get:
      tags:
        - Provider
      operationId: getProviderItem
      summary: 'Retrieves a Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Provider resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Provider
      operationId: deleteProviderItem
      summary: 'Removes the Provider resource.'
      responses:
        204:
          description: 'Provider resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Provider
      operationId: putProviderItem
      summary: 'Replaces the Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Provider:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Provider-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Provider-write'
        description: 'The updated Provider resource'
    patch:
      tags:
        - Provider
      operationId: patchProviderItem
      summary: 'Updates the Provider resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Provider resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Provider:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Provider-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Provider-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Provider-write'
        description: 'The updated Provider resource'
  /scopes:
    get:
      tags:
        - Scope
      operationId: getScopeCollection
      summary: 'Retrieves the collection of Scope resources.'
      responses:
        200:
          description: 'Scope collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Scope:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scope-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Scope
      operationId: postScopeCollection
      summary: 'Creates a Scope resource.'
      responses:
        201:
          description: 'Scope resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
          links:
            GetScopeItem:
              parameters:
                id: '$response.body#/id'
              operationId: getScopeItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /scopes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Scope:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Scope-write'
        description: 'The new Scope resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/scopes/{id}':
    get:
      tags:
        - Scope
      operationId: getScopeItem
      summary: 'Retrieves a Scope resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Scope resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Scope
      operationId: deleteScopeItem
      summary: 'Removes the Scope resource.'
      responses:
        204:
          description: 'Scope resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Scope
      operationId: putScopeItem
      summary: 'Replaces the Scope resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Scope resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Scope:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Scope-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Scope-write'
        description: 'The updated Scope resource'
    patch:
      tags:
        - Scope
      operationId: patchScopeItem
      summary: 'Updates the Scope resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Scope resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Scope:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Scope-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Scope-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Scope-write'
        description: 'The updated Scope resource'
  /tokens:
    get:
      tags:
        - Token
      operationId: getTokenCollection
      summary: 'Retrieves the collection of Token resources.'
      responses:
        200:
          description: 'Token collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Token:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Token-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Token
      operationId: postTokenCollection
      summary: 'Creates a Token resource.'
      responses:
        201:
          description: 'Token resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
          links:
            GetTokenItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTokenItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /tokens/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Token:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Token-write'
        description: 'The new Token resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/tokens/{id}':
    get:
      tags:
        - Token
      operationId: getTokenItem
      summary: 'Retrieves a Token resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Token resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Token
      operationId: deleteTokenItem
      summary: 'Removes the Token resource.'
      responses:
        204:
          description: 'Token resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Token
      operationId: putTokenItem
      summary: 'Replaces the Token resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Token resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Token:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Token-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Token-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Token-write'
        description: 'The updated Token resource'
    patch:
      tags:
        - Token
      operationId: patchTokenItem
      summary: 'Updates the Token resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Token resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Token:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Token-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Token-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Token-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Token-write'
        description: 'The updated Token resource'
  /users:
    get:
      tags:
        - User
      operationId: getUserCollection
      summary: 'Retrieves the collection of User resources.'
      responses:
        200:
          description: 'User collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/User:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - User
      operationId: postUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The new User resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /users/login:
    post:
      tags:
        - User
      operationId: loginUserCollection
      summary: 'Creates a User resource.'
      responses:
        201:
          description: 'User resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
          links:
            GetUserItem:
              parameters:
                id: '$response.body#/id'
              operationId: getUserItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The new User resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/users/{id}':
    get:
      tags:
        - User
      operationId: getUserItem
      summary: 'Retrieves a User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'User resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - User
      operationId: deleteUserItem
      summary: 'Removes the User resource.'
      responses:
        204:
          description: 'User resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - User
      operationId: putUserItem
      summary: 'Replaces the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/User:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/json:
            schema:
              $ref: '#/components/schemas/User-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/User-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/User-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/User-write'
          text/html:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The updated User resource'
    patch:
      tags:
        - User
      operationId: patchUserItem
      summary: 'Updates the User resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'User resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/User:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/json:
              schema:
                $ref: '#/components/schemas/User-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/User-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/User-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/User-read'
            text/html:
              schema:
                $ref: '#/components/schemas/User-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/User-write'
        description: 'The updated User resource'
components:
  schemas:
    Application-read:
      type: object
      description: 'All properties that the entity Application holds.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    Application-write:
      type: object
      description: 'All properties that the entity Application holds.'
      required:
        - organization
        - name
        - description
      properties:
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope-write'
    'Application:jsonld-read':
      type: object
      description: 'All properties that the entity Application holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope:jsonld-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    'Application:jsonld-write':
      type: object
      description: 'All properties that the entity Application holds.'
      required:
        - organization
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope:jsonld-write'
    Group-read:
      type: object
      description: 'A user Group.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope-read'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    Group-write:
      type: object
      description: 'A user Group.'
      required:
        - organization
        - name
        - description
      properties:
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope-write'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User-write'
    'Group:jsonld-read':
      type: object
      description: 'A user Group.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope:jsonld-read'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User:jsonld-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    'Group:jsonld-write':
      type: object
      description: 'A user Group.'
      required:
        - organization
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        scopes:
          type: array
          items:
            $ref: '#/components/schemas/Scope:jsonld-write'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User:jsonld-write'
    Provider-read:
      type: object
      description: 'An external identity provider (like facebook)'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    Provider-write:
      type: object
      description: 'An external identity provider (like facebook)'
      required:
        - organization
        - name
        - description
      properties:
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
    'Provider:jsonld-read':
      type: object
      description: 'An external identity provider (like facebook)'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    'Provider:jsonld-write':
      type: object
      description: 'An external identity provider (like facebook)'
      required:
        - organization
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
    Scope-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        application:
          $ref: '#/components/schemas/Application-read'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    Scope-write:
      type: object
      description: 'All properties that the entity User holds.'
      required:
        - organization
        - name
        - description
      properties:
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        application:
          $ref: '#/components/schemas/Application-write'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group-write'
    'Scope:jsonld-read':
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-read'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-read'
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - name
        - description
    'Scope:jsonld-write':
      type: object
      description: 'All properties that the entity User holds.'
      required:
        - organization
        - name
        - description
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        name:
          description: 'The name of this menu'
          type: string
        description:
          description: 'The description of this page.'
          type: string
        application:
          $ref: '#/components/schemas/Application:jsonld-write'
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/Group:jsonld-write'
    Token-read:
      type: object
      description: 'A token from an external identity proficer (like facebook).'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        user:
          $ref: '#/components/schemas/User-read'
        provider:
          $ref: '#/components/schemas/Provider-read'
        token:
          type: string
        validTill:
          readOnly: true
          description: 'The moment this token expirec'
          type: string
          format: date-time
        createdAt:
          readOnly: true
          description: 'The moment this token was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this token was changed'
          type: string
          format: date-time
    Token-write:
      type: object
      description: 'A token from an external identity proficer (like facebook).'
      properties:
        user:
          $ref: '#/components/schemas/User-write'
        provider:
          $ref: '#/components/schemas/Provider-write'
        token:
          type: string
    'Token:jsonld-read':
      type: object
      description: 'A token from an external identity proficer (like facebook).'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        user:
          $ref: '#/components/schemas/User:jsonld-read'
        provider:
          $ref: '#/components/schemas/Provider:jsonld-read'
        token:
          type: string
        validTill:
          readOnly: true
          description: 'The moment this token expirec'
          type: string
          format: date-time
        createdAt:
          readOnly: true
          description: 'The moment this token was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this token was changed'
          type: string
          format: date-time
    'Token:jsonld-write':
      type: object
      description: 'A token from an external identity proficer (like facebook).'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        user:
          $ref: '#/components/schemas/User:jsonld-write'
        provider:
          $ref: '#/components/schemas/Provider:jsonld-write'
        token:
          type: string
    User-read:
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        username:
          description: 'A unique visual identifier that represents this user.'
          type: string
        person:
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - username
    User-write:
      type: object
      description: 'All properties that the entity User holds.'
      required:
        - organization
        - username
      properties:
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        username:
          description: 'A unique visual identifier that represents this user.'
          type: string
        person:
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        password:
          writeOnly: true
          description: 'The hashed password'
          type: string
    'User:jsonld-read':
      type: object
      description: 'All properties that the entity User holds.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        username:
          description: 'A unique visual identifier that represents this user.'
          type: string
        person:
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        createdAt:
          readOnly: true
          description: 'The moment this resource was created'
          type: string
          format: date-time
        updatedAt:
          readOnly: true
          description: 'The last time this resource was changed'
          type: string
          format: date-time
      required:
        - organization
        - username
    'User:jsonld-write':
      type: object
      description: 'All properties that the entity User holds.'
      required:
        - organization
        - username
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        organization:
          description: 'The RSIN of the organization that owns this product'
          type: string
        username:
          description: 'A unique visual identifier that represents this user.'
          type: string
        person:
          description: 'A contact component person'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        password:
          writeOnly: true
          description: 'The hashed password'
          type: string
definitions:
  Application-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      createdAt:
        description: 'The moment this resource was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this resource was changed'
        type: \DateTime
      scopes: []
    required:
      - organization
      - name
      - description
  Application-write:
    properties:
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      scopes: []
    required:
      - organization
      - name
      - description
  Group-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      createdAt:
        description: 'The moment this resource was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this resource was changed'
        type: \DateTime
      scopes: []
      users: []
    required:
      - organization
      - name
      - description
  Group-write:
    properties:
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      scopes: []
      users: []
    required:
      - organization
      - name
      - description
  Provider-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      createdAt:
        description: 'The moment this resource was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this resource was changed'
        type: \DateTime
    required:
      - organization
      - name
      - description
  Provider-write:
    properties:
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
    required:
      - organization
      - name
      - description
  Scope-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      createdAt:
        description: 'The moment this resource was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this resource was changed'
        type: \DateTime
      application: []
      userGroups: []
    required:
      - organization
      - name
      - description
  Scope-write:
    properties:
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      name:
        description: 'The name of this menu'
        type: string
        example: 'webshop menu'
        maxLength: 255
      description:
        description: 'The description of this page.'
        type: string
        example: 'This page holds info about this application'
        maxLength: 255
      application: []
      userGroups: []
    required:
      - organization
      - name
      - description
  Token-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      token: []
      validTill:
        description: 'The moment this token expirec'
        type: \DateTime
      createdAt:
        description: 'The moment this token was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this token was changed'
        type: \DateTime
      user: []
      provider: []
    required: []
  Token-write:
    properties:
      token: []
      user: []
      provider: []
    required: []
  User-read:
    properties:
      id:
        description: ''
        type: string
        format: uuid
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      username:
        description: 'A unique visual identifier that represents this user.'
        type: string
        example: '002851234'
        maxLength: 255
        minLength: 8
      person:
        description: 'A contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        format: url
        maxLength: 255
      createdAt:
        description: 'The moment this resource was created'
        type: \DateTime
      updatedAt:
        description: 'The last time this resource was changed'
        type: \DateTime
    required:
      - organization
      - username
  User-write:
    properties:
      organization:
        description: 'The RSIN of the organization that owns this product'
        type: string
        example: '002851234'
        maxLength: 11
        minLength: 8
      username:
        description: 'A unique visual identifier that represents this user.'
        type: string
        example: '002851234'
        maxLength: 255
        minLength: 8
      person:
        description: 'A contact component person'
        type: string
        example: 'https://cc.zaakonline.nl/people/06cd0132-5b39-44cb-b320-a9531b2c4ac7'
        format: url
        maxLength: 255
      password:
        description: 'The hashed password'
        type: string
    required:
      - organization
      - username
tags:
  -
    name: Application
    description: |
      All properties that the entity Application holds.
      
      
  -
    name: Group
    description: |
      A user Group.
      
      
  -
    name: Provider
    description: |
      An external identity provider (like facebook)
      
      
  -
    name: Scope
    description: |
      All properties that the entity User holds.
      
      
  -
    name: Token
    description: |
      A token from an external identity proficer (like facebook).
      
      
  -
    name: User
    description: |
      All properties that the entity User holds.
      
      Entity User exists of an id, a name, a password, a email and has zero or more roles.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the User resource'
      write: 'write right to the User resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the User resource'
      write: 'write right to the User resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
